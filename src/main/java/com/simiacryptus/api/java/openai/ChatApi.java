/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.simiacryptus.api.java.openai;

import com.fasterxml.jackson.core.type.TypeReference;

import com.simiacryptus.api.java.ApiException;
import com.simiacryptus.api.java.ApiClient;
import com.simiacryptus.api.java.Configuration;
import com.simiacryptus.api.java.Pair;

import com.simiacryptus.api.java.openai.model.CreateChatCompletionRequest;
import com.simiacryptus.api.java.openai.model.CreateChatCompletionResponse;


import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringJoiner;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-09T16:24:46.732753800-05:00[America/New_York]")
public class ChatApi {


  private ApiClient apiClient;

  public ChatApi() {
    this(Configuration.getDefaultApiClient());
  }

  public ChatApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Creates a model response for the given chat conversation.
   * 
   * @param createChatCompletionRequest  (required)
   * @return CreateChatCompletionResponse
   * @throws ApiException if fails to make API call
   */
  public CreateChatCompletionResponse createChatCompletion(CreateChatCompletionRequest createChatCompletionRequest) throws ApiException {
    return this.createChatCompletion(createChatCompletionRequest, Collections.emptyMap());
  }


  /**
   * Creates a model response for the given chat conversation.
   * 
   * @param createChatCompletionRequest  (required)
   * @param additionalHeaders additionalHeaders for this call
   * @return CreateChatCompletionResponse
   * @throws ApiException if fails to make API call
   */
  public CreateChatCompletionResponse createChatCompletion(CreateChatCompletionRequest createChatCompletionRequest, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = createChatCompletionRequest;
    
    // verify the required parameter 'createChatCompletionRequest' is set
    if (createChatCompletionRequest == null) {
      throw new ApiException(400, "Missing the required parameter 'createChatCompletionRequest' when calling createChatCompletion");
    }
    
    // create path and map variables
    String localVarPath = "/chat/completions";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "ApiKeyAuth" };

    TypeReference<CreateChatCompletionResponse> localVarReturnType = new TypeReference<CreateChatCompletionResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

}
