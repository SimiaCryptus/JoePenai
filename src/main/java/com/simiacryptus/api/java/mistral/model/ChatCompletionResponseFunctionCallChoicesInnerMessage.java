/*
 * Mistral AI API
 * Chat Completion and Embeddings APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.simiacryptus.api.java.mistral.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.simiacryptus.api.java.mistral.model.ChatCompletionResponseFunctionCallChoicesInnerMessageToolCallsInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * ChatCompletionResponseFunctionCallChoicesInnerMessage
 */
@JsonPropertyOrder({
  ChatCompletionResponseFunctionCallChoicesInnerMessage.JSON_PROPERTY_ROLE,
  ChatCompletionResponseFunctionCallChoicesInnerMessage.JSON_PROPERTY_CONTENT,
  ChatCompletionResponseFunctionCallChoicesInnerMessage.JSON_PROPERTY_TOOL_CALLS
})
@JsonTypeName("ChatCompletionResponseFunctionCall_choices_inner_message")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-09T16:24:59.450958200-05:00[America/New_York]")
public class ChatCompletionResponseFunctionCallChoicesInnerMessage {
  public static final String JSON_PROPERTY_ROLE = "role";
  private String role;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_TOOL_CALLS = "tool_calls";
  private List<ChatCompletionResponseFunctionCallChoicesInnerMessageToolCallsInner> toolCalls;

  public ChatCompletionResponseFunctionCallChoicesInnerMessage() {
  }

  public ChatCompletionResponseFunctionCallChoicesInnerMessage role(String role) {
    
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(String role) {
    this.role = role;
  }


  public ChatCompletionResponseFunctionCallChoicesInnerMessage content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(String content) {
    this.content = content;
  }


  public ChatCompletionResponseFunctionCallChoicesInnerMessage toolCalls(List<ChatCompletionResponseFunctionCallChoicesInnerMessageToolCallsInner> toolCalls) {
    
    this.toolCalls = toolCalls;
    return this;
  }

  public ChatCompletionResponseFunctionCallChoicesInnerMessage addToolCallsItem(ChatCompletionResponseFunctionCallChoicesInnerMessageToolCallsInner toolCallsItem) {
    if (this.toolCalls == null) {
      this.toolCalls = new ArrayList<>();
    }
    this.toolCalls.add(toolCallsItem);
    return this;
  }

   /**
   * Get toolCalls
   * @return toolCalls
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOOL_CALLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ChatCompletionResponseFunctionCallChoicesInnerMessageToolCallsInner> getToolCalls() {
    return toolCalls;
  }


  @JsonProperty(JSON_PROPERTY_TOOL_CALLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToolCalls(List<ChatCompletionResponseFunctionCallChoicesInnerMessageToolCallsInner> toolCalls) {
    this.toolCalls = toolCalls;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatCompletionResponseFunctionCallChoicesInnerMessage chatCompletionResponseFunctionCallChoicesInnerMessage = (ChatCompletionResponseFunctionCallChoicesInnerMessage) o;
    return Objects.equals(this.role, chatCompletionResponseFunctionCallChoicesInnerMessage.role) &&
        Objects.equals(this.content, chatCompletionResponseFunctionCallChoicesInnerMessage.content) &&
        Objects.equals(this.toolCalls, chatCompletionResponseFunctionCallChoicesInnerMessage.toolCalls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(role, content, toolCalls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatCompletionResponseFunctionCallChoicesInnerMessage {\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    toolCalls: ").append(toIndentedString(toolCalls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `role` to the URL query string
    if (getRole() != null) {
      try {
        joiner.add(String.format("%srole%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRole()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `content` to the URL query string
    if (getContent() != null) {
      try {
        joiner.add(String.format("%scontent%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getContent()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `tool_calls` to the URL query string
    if (getToolCalls() != null) {
      for (int i = 0; i < getToolCalls().size(); i++) {
        if (getToolCalls().get(i) != null) {
          joiner.add(getToolCalls().get(i).toUrlQueryString(String.format("%stool_calls%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}

