/*
 * ModelsLab AI API's
 * This is ModelsLab Stable Diffusion and Multiple AI APIs, here you can pass details to generate images using API, without needs of GPU locally.  You will need to have _**api key**_ to generate images, if you don't have it, get it from [https://modelslab.com](https://modelslab.com/)  Send Json post request with data and links, don't send files as raw format, send accessible links instead
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.simiacryptus.api.java.modelslab;

import com.fasterxml.jackson.core.type.TypeReference;

import com.simiacryptus.api.java.ApiException;
import com.simiacryptus.api.java.ApiClient;
import com.simiacryptus.api.java.Configuration;
import com.simiacryptus.api.java.Pair;

import com.simiacryptus.api.java.modelslab.model.ControlnetMainRequest;


import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringJoiner;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-09T16:25:01.849546200-05:00[America/New_York]")
public class ControlNetApi {


  private ApiClient apiClient;

  public ControlNetApi() {
    this(Configuration.getDefaultApiClient());
  }

  public ControlNetApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * ControlNet Main
   * ControlNet APIs  All 8 controlnet models are available to be used  - canny - depth - hed - hough - normal - openpose - scribble - segmentation       pass above values in \&quot;controlnet_model\&quot; to choose specific controlnet model  1. controlnet_model : control net model id 2. auto_hint : yes/no, hint canny edge or depth automatically. default \&quot;yes\&quot; 3. prompt: prompt to modify image, keep it detailed as possible 4. init_image : direct image link of model
   * @param controlnetMainRequest  (optional)
   * @throws ApiException if fails to make API call
   */
  public void controlnetMain(ControlnetMainRequest controlnetMainRequest) throws ApiException {
    this.controlnetMain(controlnetMainRequest, Collections.emptyMap());
  }


  /**
   * ControlNet Main
   * ControlNet APIs  All 8 controlnet models are available to be used  - canny - depth - hed - hough - normal - openpose - scribble - segmentation       pass above values in \&quot;controlnet_model\&quot; to choose specific controlnet model  1. controlnet_model : control net model id 2. auto_hint : yes/no, hint canny edge or depth automatically. default \&quot;yes\&quot; 3. prompt: prompt to modify image, keep it detailed as possible 4. init_image : direct image link of model
   * @param controlnetMainRequest  (optional)
   * @param additionalHeaders additionalHeaders for this call
   * @throws ApiException if fails to make API call
   */
  public void controlnetMain(ControlnetMainRequest controlnetMainRequest, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = controlnetMainRequest;
    
    // create path and map variables
    String localVarPath = "/api/v5/controlnet";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        null
    );
  }

}
