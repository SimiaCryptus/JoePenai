/*
 * ModelsLab AI API's
 * This is ModelsLab Stable Diffusion and Multiple AI APIs, here you can pass details to generate images using API, without needs of GPU locally.  You will need to have _**api key**_ to generate images, if you don't have it, get it from [https://modelslab.com](https://modelslab.com/)  Send Json post request with data and links, don't send files as raw format, send accessible links instead
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.simiacryptus.api.java.modelslab.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * DreamboothText2image200ResponseMeta
 */
@JsonPropertyOrder({
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_H,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_W,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_EMBEDDINGS,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_FILE_PREFIX,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_FULL_URL,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_GUIDANCE_SCALE,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_LORA,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_LORA_STRENGTH,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_MODEL_ID,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_MULTI_LINGUAL,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_N_SAMPLES,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_NEGATIVE_PROMPT,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_PANORAMA,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_PROMPT,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_SAFETY_CHECKER,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_SCHEDULER,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_SEED,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_SELF_ATTENTION,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_STEPS,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_TOMESD,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_UPSCALE,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_USE_KARRAS_SIGMAS,
  DreamboothText2image200ResponseMeta.JSON_PROPERTY_VAE
})
@JsonTypeName("dreamboothText2image_200_response_meta")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-09T16:25:01.849546200-05:00[America/New_York]")
public class DreamboothText2image200ResponseMeta {
  public static final String JSON_PROPERTY_H = "H";
  private BigDecimal H;

  public static final String JSON_PROPERTY_W = "W";
  private BigDecimal W;

  public static final String JSON_PROPERTY_EMBEDDINGS = "embeddings";
  private JsonNullable<Object> embeddings = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FILE_PREFIX = "file_prefix";
  private String filePrefix;

  public static final String JSON_PROPERTY_FULL_URL = "full_url";
  private String fullUrl;

  public static final String JSON_PROPERTY_GUIDANCE_SCALE = "guidance_scale";
  private BigDecimal guidanceScale;

  public static final String JSON_PROPERTY_LORA = "lora";
  private JsonNullable<Object> lora = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_LORA_STRENGTH = "lora_strength";
  private BigDecimal loraStrength;

  public static final String JSON_PROPERTY_MODEL_ID = "model_id";
  private String modelId;

  public static final String JSON_PROPERTY_MULTI_LINGUAL = "multi_lingual";
  private String multiLingual;

  public static final String JSON_PROPERTY_N_SAMPLES = "n_samples";
  private BigDecimal nSamples;

  public static final String JSON_PROPERTY_NEGATIVE_PROMPT = "negative_prompt";
  private String negativePrompt;

  public static final String JSON_PROPERTY_PANORAMA = "panorama";
  private String panorama;

  public static final String JSON_PROPERTY_PROMPT = "prompt";
  private String prompt;

  public static final String JSON_PROPERTY_SAFETY_CHECKER = "safety_checker";
  private String safetyChecker;

  public static final String JSON_PROPERTY_SCHEDULER = "scheduler";
  private String scheduler;

  public static final String JSON_PROPERTY_SEED = "seed";
  private BigDecimal seed;

  public static final String JSON_PROPERTY_SELF_ATTENTION = "self_attention";
  private String selfAttention;

  public static final String JSON_PROPERTY_STEPS = "steps";
  private BigDecimal steps;

  public static final String JSON_PROPERTY_TOMESD = "tomesd";
  private String tomesd;

  public static final String JSON_PROPERTY_UPSCALE = "upscale";
  private String upscale;

  public static final String JSON_PROPERTY_USE_KARRAS_SIGMAS = "use_karras_sigmas";
  private String useKarrasSigmas;

  public static final String JSON_PROPERTY_VAE = "vae";
  private JsonNullable<Object> vae = JsonNullable.<Object>of(null);

  public DreamboothText2image200ResponseMeta() {
  }

  public DreamboothText2image200ResponseMeta H(BigDecimal H) {
    
    this.H = H;
    return this;
  }

   /**
   * Get H
   * @return H
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_H)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getH() {
    return H;
  }


  @JsonProperty(JSON_PROPERTY_H)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setH(BigDecimal H) {
    this.H = H;
  }


  public DreamboothText2image200ResponseMeta W(BigDecimal W) {
    
    this.W = W;
    return this;
  }

   /**
   * Get W
   * @return W
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_W)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getW() {
    return W;
  }


  @JsonProperty(JSON_PROPERTY_W)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setW(BigDecimal W) {
    this.W = W;
  }


  public DreamboothText2image200ResponseMeta embeddings(Object embeddings) {
    this.embeddings = JsonNullable.<Object>of(embeddings);
    
    return this;
  }

   /**
   * Get embeddings
   * @return embeddings
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getEmbeddings() {
        return embeddings.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMBEDDINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEmbeddings_JsonNullable() {
    return embeddings;
  }
  
  @JsonProperty(JSON_PROPERTY_EMBEDDINGS)
  public void setEmbeddings_JsonNullable(JsonNullable<Object> embeddings) {
    this.embeddings = embeddings;
  }

  public void setEmbeddings(Object embeddings) {
    this.embeddings = JsonNullable.<Object>of(embeddings);
  }


  public DreamboothText2image200ResponseMeta filePrefix(String filePrefix) {
    
    this.filePrefix = filePrefix;
    return this;
  }

   /**
   * Get filePrefix
   * @return filePrefix
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilePrefix() {
    return filePrefix;
  }


  @JsonProperty(JSON_PROPERTY_FILE_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilePrefix(String filePrefix) {
    this.filePrefix = filePrefix;
  }


  public DreamboothText2image200ResponseMeta fullUrl(String fullUrl) {
    
    this.fullUrl = fullUrl;
    return this;
  }

   /**
   * Get fullUrl
   * @return fullUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFullUrl() {
    return fullUrl;
  }


  @JsonProperty(JSON_PROPERTY_FULL_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullUrl(String fullUrl) {
    this.fullUrl = fullUrl;
  }


  public DreamboothText2image200ResponseMeta guidanceScale(BigDecimal guidanceScale) {
    
    this.guidanceScale = guidanceScale;
    return this;
  }

   /**
   * Get guidanceScale
   * @return guidanceScale
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GUIDANCE_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getGuidanceScale() {
    return guidanceScale;
  }


  @JsonProperty(JSON_PROPERTY_GUIDANCE_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuidanceScale(BigDecimal guidanceScale) {
    this.guidanceScale = guidanceScale;
  }


  public DreamboothText2image200ResponseMeta lora(Object lora) {
    this.lora = JsonNullable.<Object>of(lora);
    
    return this;
  }

   /**
   * Get lora
   * @return lora
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLora() {
        return lora.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LORA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLora_JsonNullable() {
    return lora;
  }
  
  @JsonProperty(JSON_PROPERTY_LORA)
  public void setLora_JsonNullable(JsonNullable<Object> lora) {
    this.lora = lora;
  }

  public void setLora(Object lora) {
    this.lora = JsonNullable.<Object>of(lora);
  }


  public DreamboothText2image200ResponseMeta loraStrength(BigDecimal loraStrength) {
    
    this.loraStrength = loraStrength;
    return this;
  }

   /**
   * Get loraStrength
   * @return loraStrength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LORA_STRENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLoraStrength() {
    return loraStrength;
  }


  @JsonProperty(JSON_PROPERTY_LORA_STRENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoraStrength(BigDecimal loraStrength) {
    this.loraStrength = loraStrength;
  }


  public DreamboothText2image200ResponseMeta modelId(String modelId) {
    
    this.modelId = modelId;
    return this;
  }

   /**
   * Get modelId
   * @return modelId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModelId() {
    return modelId;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModelId(String modelId) {
    this.modelId = modelId;
  }


  public DreamboothText2image200ResponseMeta multiLingual(String multiLingual) {
    
    this.multiLingual = multiLingual;
    return this;
  }

   /**
   * Get multiLingual
   * @return multiLingual
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTI_LINGUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMultiLingual() {
    return multiLingual;
  }


  @JsonProperty(JSON_PROPERTY_MULTI_LINGUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultiLingual(String multiLingual) {
    this.multiLingual = multiLingual;
  }


  public DreamboothText2image200ResponseMeta nSamples(BigDecimal nSamples) {
    
    this.nSamples = nSamples;
    return this;
  }

   /**
   * Get nSamples
   * @return nSamples
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_N_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getnSamples() {
    return nSamples;
  }


  @JsonProperty(JSON_PROPERTY_N_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setnSamples(BigDecimal nSamples) {
    this.nSamples = nSamples;
  }


  public DreamboothText2image200ResponseMeta negativePrompt(String negativePrompt) {
    
    this.negativePrompt = negativePrompt;
    return this;
  }

   /**
   * Get negativePrompt
   * @return negativePrompt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEGATIVE_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNegativePrompt() {
    return negativePrompt;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegativePrompt(String negativePrompt) {
    this.negativePrompt = negativePrompt;
  }


  public DreamboothText2image200ResponseMeta panorama(String panorama) {
    
    this.panorama = panorama;
    return this;
  }

   /**
   * Get panorama
   * @return panorama
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PANORAMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPanorama() {
    return panorama;
  }


  @JsonProperty(JSON_PROPERTY_PANORAMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPanorama(String panorama) {
    this.panorama = panorama;
  }


  public DreamboothText2image200ResponseMeta prompt(String prompt) {
    
    this.prompt = prompt;
    return this;
  }

   /**
   * Get prompt
   * @return prompt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrompt() {
    return prompt;
  }


  @JsonProperty(JSON_PROPERTY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrompt(String prompt) {
    this.prompt = prompt;
  }


  public DreamboothText2image200ResponseMeta safetyChecker(String safetyChecker) {
    
    this.safetyChecker = safetyChecker;
    return this;
  }

   /**
   * Get safetyChecker
   * @return safetyChecker
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAFETY_CHECKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSafetyChecker() {
    return safetyChecker;
  }


  @JsonProperty(JSON_PROPERTY_SAFETY_CHECKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSafetyChecker(String safetyChecker) {
    this.safetyChecker = safetyChecker;
  }


  public DreamboothText2image200ResponseMeta scheduler(String scheduler) {
    
    this.scheduler = scheduler;
    return this;
  }

   /**
   * Get scheduler
   * @return scheduler
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScheduler() {
    return scheduler;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduler(String scheduler) {
    this.scheduler = scheduler;
  }


  public DreamboothText2image200ResponseMeta seed(BigDecimal seed) {
    
    this.seed = seed;
    return this;
  }

   /**
   * Get seed
   * @return seed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSeed() {
    return seed;
  }


  @JsonProperty(JSON_PROPERTY_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeed(BigDecimal seed) {
    this.seed = seed;
  }


  public DreamboothText2image200ResponseMeta selfAttention(String selfAttention) {
    
    this.selfAttention = selfAttention;
    return this;
  }

   /**
   * Get selfAttention
   * @return selfAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELF_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelfAttention() {
    return selfAttention;
  }


  @JsonProperty(JSON_PROPERTY_SELF_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelfAttention(String selfAttention) {
    this.selfAttention = selfAttention;
  }


  public DreamboothText2image200ResponseMeta steps(BigDecimal steps) {
    
    this.steps = steps;
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSteps() {
    return steps;
  }


  @JsonProperty(JSON_PROPERTY_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSteps(BigDecimal steps) {
    this.steps = steps;
  }


  public DreamboothText2image200ResponseMeta tomesd(String tomesd) {
    
    this.tomesd = tomesd;
    return this;
  }

   /**
   * Get tomesd
   * @return tomesd
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOMESD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTomesd() {
    return tomesd;
  }


  @JsonProperty(JSON_PROPERTY_TOMESD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTomesd(String tomesd) {
    this.tomesd = tomesd;
  }


  public DreamboothText2image200ResponseMeta upscale(String upscale) {
    
    this.upscale = upscale;
    return this;
  }

   /**
   * Get upscale
   * @return upscale
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpscale() {
    return upscale;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscale(String upscale) {
    this.upscale = upscale;
  }


  public DreamboothText2image200ResponseMeta useKarrasSigmas(String useKarrasSigmas) {
    
    this.useKarrasSigmas = useKarrasSigmas;
    return this;
  }

   /**
   * Get useKarrasSigmas
   * @return useKarrasSigmas
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_KARRAS_SIGMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUseKarrasSigmas() {
    return useKarrasSigmas;
  }


  @JsonProperty(JSON_PROPERTY_USE_KARRAS_SIGMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseKarrasSigmas(String useKarrasSigmas) {
    this.useKarrasSigmas = useKarrasSigmas;
  }


  public DreamboothText2image200ResponseMeta vae(Object vae) {
    this.vae = JsonNullable.<Object>of(vae);
    
    return this;
  }

   /**
   * Get vae
   * @return vae
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getVae() {
        return vae.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VAE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getVae_JsonNullable() {
    return vae;
  }
  
  @JsonProperty(JSON_PROPERTY_VAE)
  public void setVae_JsonNullable(JsonNullable<Object> vae) {
    this.vae = vae;
  }

  public void setVae(Object vae) {
    this.vae = JsonNullable.<Object>of(vae);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DreamboothText2image200ResponseMeta dreamboothText2image200ResponseMeta = (DreamboothText2image200ResponseMeta) o;
    return Objects.equals(this.H, dreamboothText2image200ResponseMeta.H) &&
        Objects.equals(this.W, dreamboothText2image200ResponseMeta.W) &&
        equalsNullable(this.embeddings, dreamboothText2image200ResponseMeta.embeddings) &&
        Objects.equals(this.filePrefix, dreamboothText2image200ResponseMeta.filePrefix) &&
        Objects.equals(this.fullUrl, dreamboothText2image200ResponseMeta.fullUrl) &&
        Objects.equals(this.guidanceScale, dreamboothText2image200ResponseMeta.guidanceScale) &&
        equalsNullable(this.lora, dreamboothText2image200ResponseMeta.lora) &&
        Objects.equals(this.loraStrength, dreamboothText2image200ResponseMeta.loraStrength) &&
        Objects.equals(this.modelId, dreamboothText2image200ResponseMeta.modelId) &&
        Objects.equals(this.multiLingual, dreamboothText2image200ResponseMeta.multiLingual) &&
        Objects.equals(this.nSamples, dreamboothText2image200ResponseMeta.nSamples) &&
        Objects.equals(this.negativePrompt, dreamboothText2image200ResponseMeta.negativePrompt) &&
        Objects.equals(this.panorama, dreamboothText2image200ResponseMeta.panorama) &&
        Objects.equals(this.prompt, dreamboothText2image200ResponseMeta.prompt) &&
        Objects.equals(this.safetyChecker, dreamboothText2image200ResponseMeta.safetyChecker) &&
        Objects.equals(this.scheduler, dreamboothText2image200ResponseMeta.scheduler) &&
        Objects.equals(this.seed, dreamboothText2image200ResponseMeta.seed) &&
        Objects.equals(this.selfAttention, dreamboothText2image200ResponseMeta.selfAttention) &&
        Objects.equals(this.steps, dreamboothText2image200ResponseMeta.steps) &&
        Objects.equals(this.tomesd, dreamboothText2image200ResponseMeta.tomesd) &&
        Objects.equals(this.upscale, dreamboothText2image200ResponseMeta.upscale) &&
        Objects.equals(this.useKarrasSigmas, dreamboothText2image200ResponseMeta.useKarrasSigmas) &&
        equalsNullable(this.vae, dreamboothText2image200ResponseMeta.vae);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(H, W, hashCodeNullable(embeddings), filePrefix, fullUrl, guidanceScale, hashCodeNullable(lora), loraStrength, modelId, multiLingual, nSamples, negativePrompt, panorama, prompt, safetyChecker, scheduler, seed, selfAttention, steps, tomesd, upscale, useKarrasSigmas, hashCodeNullable(vae));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DreamboothText2image200ResponseMeta {\n");
    sb.append("    H: ").append(toIndentedString(H)).append("\n");
    sb.append("    W: ").append(toIndentedString(W)).append("\n");
    sb.append("    embeddings: ").append(toIndentedString(embeddings)).append("\n");
    sb.append("    filePrefix: ").append(toIndentedString(filePrefix)).append("\n");
    sb.append("    fullUrl: ").append(toIndentedString(fullUrl)).append("\n");
    sb.append("    guidanceScale: ").append(toIndentedString(guidanceScale)).append("\n");
    sb.append("    lora: ").append(toIndentedString(lora)).append("\n");
    sb.append("    loraStrength: ").append(toIndentedString(loraStrength)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    multiLingual: ").append(toIndentedString(multiLingual)).append("\n");
    sb.append("    nSamples: ").append(toIndentedString(nSamples)).append("\n");
    sb.append("    negativePrompt: ").append(toIndentedString(negativePrompt)).append("\n");
    sb.append("    panorama: ").append(toIndentedString(panorama)).append("\n");
    sb.append("    prompt: ").append(toIndentedString(prompt)).append("\n");
    sb.append("    safetyChecker: ").append(toIndentedString(safetyChecker)).append("\n");
    sb.append("    scheduler: ").append(toIndentedString(scheduler)).append("\n");
    sb.append("    seed: ").append(toIndentedString(seed)).append("\n");
    sb.append("    selfAttention: ").append(toIndentedString(selfAttention)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    tomesd: ").append(toIndentedString(tomesd)).append("\n");
    sb.append("    upscale: ").append(toIndentedString(upscale)).append("\n");
    sb.append("    useKarrasSigmas: ").append(toIndentedString(useKarrasSigmas)).append("\n");
    sb.append("    vae: ").append(toIndentedString(vae)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `H` to the URL query string
    if (getH() != null) {
      try {
        joiner.add(String.format("%sH%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getH()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `W` to the URL query string
    if (getW() != null) {
      try {
        joiner.add(String.format("%sW%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getW()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `embeddings` to the URL query string
    if (getEmbeddings() != null) {
      try {
        joiner.add(String.format("%sembeddings%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEmbeddings()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `file_prefix` to the URL query string
    if (getFilePrefix() != null) {
      try {
        joiner.add(String.format("%sfile_prefix%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFilePrefix()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `full_url` to the URL query string
    if (getFullUrl() != null) {
      try {
        joiner.add(String.format("%sfull_url%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFullUrl()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `guidance_scale` to the URL query string
    if (getGuidanceScale() != null) {
      try {
        joiner.add(String.format("%sguidance_scale%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGuidanceScale()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `lora` to the URL query string
    if (getLora() != null) {
      try {
        joiner.add(String.format("%slora%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLora()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `lora_strength` to the URL query string
    if (getLoraStrength() != null) {
      try {
        joiner.add(String.format("%slora_strength%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLoraStrength()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `model_id` to the URL query string
    if (getModelId() != null) {
      try {
        joiner.add(String.format("%smodel_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getModelId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `multi_lingual` to the URL query string
    if (getMultiLingual() != null) {
      try {
        joiner.add(String.format("%smulti_lingual%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMultiLingual()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `n_samples` to the URL query string
    if (getnSamples() != null) {
      try {
        joiner.add(String.format("%sn_samples%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getnSamples()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `negative_prompt` to the URL query string
    if (getNegativePrompt() != null) {
      try {
        joiner.add(String.format("%snegative_prompt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNegativePrompt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `panorama` to the URL query string
    if (getPanorama() != null) {
      try {
        joiner.add(String.format("%spanorama%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPanorama()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `prompt` to the URL query string
    if (getPrompt() != null) {
      try {
        joiner.add(String.format("%sprompt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPrompt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `safety_checker` to the URL query string
    if (getSafetyChecker() != null) {
      try {
        joiner.add(String.format("%ssafety_checker%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSafetyChecker()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `scheduler` to the URL query string
    if (getScheduler() != null) {
      try {
        joiner.add(String.format("%sscheduler%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getScheduler()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `seed` to the URL query string
    if (getSeed() != null) {
      try {
        joiner.add(String.format("%sseed%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSeed()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `self_attention` to the URL query string
    if (getSelfAttention() != null) {
      try {
        joiner.add(String.format("%sself_attention%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSelfAttention()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `steps` to the URL query string
    if (getSteps() != null) {
      try {
        joiner.add(String.format("%ssteps%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSteps()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `tomesd` to the URL query string
    if (getTomesd() != null) {
      try {
        joiner.add(String.format("%stomesd%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTomesd()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `upscale` to the URL query string
    if (getUpscale() != null) {
      try {
        joiner.add(String.format("%supscale%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUpscale()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `use_karras_sigmas` to the URL query string
    if (getUseKarrasSigmas() != null) {
      try {
        joiner.add(String.format("%suse_karras_sigmas%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUseKarrasSigmas()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `vae` to the URL query string
    if (getVae() != null) {
      try {
        joiner.add(String.format("%svae%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVae()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

