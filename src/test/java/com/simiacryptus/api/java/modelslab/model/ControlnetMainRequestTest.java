/*
 * ModelsLab AI API's
 * This is ModelsLab Stable Diffusion and Multiple AI APIs, here you can pass details to generate images using API, without needs of GPU locally.  You will need to have _**api key**_ to generate images, if you don't have it, get it from [https://modelslab.com](https://modelslab.com/)  Send Json post request with data and links, don't send files as raw format, send accessible links instead
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.simiacryptus.api.java.modelslab.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for ControlnetMainRequest
 */
public class ControlnetMainRequestTest {
    private final ControlnetMainRequest model = new ControlnetMainRequest();

    /**
     * Model tests for ControlnetMainRequest
     */
    @Test
    public void testControlnetMainRequest() {
        // TODO: test ControlnetMainRequest
    }

    /**
     * Test the property 'algorithmType'
     */
    @Test
    public void algorithmTypeTest() {
        // TODO: test algorithmType
    }

    /**
     * Test the property 'autoHint'
     */
    @Test
    public void autoHintTest() {
        // TODO: test autoHint
    }

    /**
     * Test the property 'base64'
     */
    @Test
    public void base64Test() {
        // TODO: test base64
    }

    /**
     * Test the property 'clipSkip'
     */
    @Test
    public void clipSkipTest() {
        // TODO: test clipSkip
    }

    /**
     * Test the property 'controlImage'
     */
    @Test
    public void controlImageTest() {
        // TODO: test controlImage
    }

    /**
     * Test the property 'controlnetConditioningScale'
     */
    @Test
    public void controlnetConditioningScaleTest() {
        // TODO: test controlnetConditioningScale
    }

    /**
     * Test the property 'controlnetModel'
     */
    @Test
    public void controlnetModelTest() {
        // TODO: test controlnetModel
    }

    /**
     * Test the property 'controlnetType'
     */
    @Test
    public void controlnetTypeTest() {
        // TODO: test controlnetType
    }

    /**
     * Test the property 'embeddings'
     */
    @Test
    public void embeddingsTest() {
        // TODO: test embeddings
    }

    /**
     * Test the property 'guessMode'
     */
    @Test
    public void guessModeTest() {
        // TODO: test guessMode
    }

    /**
     * Test the property 'guidance'
     */
    @Test
    public void guidanceTest() {
        // TODO: test guidance
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'initImage'
     */
    @Test
    public void initImageTest() {
        // TODO: test initImage
    }

    /**
     * Test the property 'instantResponse'
     */
    @Test
    public void instantResponseTest() {
        // TODO: test instantResponse
    }

    /**
     * Test the property 'lora'
     */
    @Test
    public void loraTest() {
        // TODO: test lora
    }

    /**
     * Test the property 'loraStrength'
     */
    @Test
    public void loraStrengthTest() {
        // TODO: test loraStrength
    }

    /**
     * Test the property 'maskImage'
     */
    @Test
    public void maskImageTest() {
        // TODO: test maskImage
    }

    /**
     * Test the property 'modelId'
     */
    @Test
    public void modelIdTest() {
        // TODO: test modelId
    }

    /**
     * Test the property 'multiLingual'
     */
    @Test
    public void multiLingualTest() {
        // TODO: test multiLingual
    }

    /**
     * Test the property 'negativePrompt'
     */
    @Test
    public void negativePromptTest() {
        // TODO: test negativePrompt
    }

    /**
     * Test the property 'prompt'
     */
    @Test
    public void promptTest() {
        // TODO: test prompt
    }

    /**
     * Test the property 'safetyChecker'
     */
    @Test
    public void safetyCheckerTest() {
        // TODO: test safetyChecker
    }

    /**
     * Test the property 'safetyCheckerType'
     */
    @Test
    public void safetyCheckerTypeTest() {
        // TODO: test safetyCheckerType
    }

    /**
     * Test the property 'samples'
     */
    @Test
    public void samplesTest() {
        // TODO: test samples
    }

    /**
     * Test the property 'scheduler'
     */
    @Test
    public void schedulerTest() {
        // TODO: test scheduler
    }

    /**
     * Test the property 'seed'
     */
    @Test
    public void seedTest() {
        // TODO: test seed
    }

    /**
     * Test the property 'steps'
     */
    @Test
    public void stepsTest() {
        // TODO: test steps
    }

    /**
     * Test the property 'strength'
     */
    @Test
    public void strengthTest() {
        // TODO: test strength
    }

    /**
     * Test the property 'temp'
     */
    @Test
    public void tempTest() {
        // TODO: test temp
    }

    /**
     * Test the property 'tomesd'
     */
    @Test
    public void tomesdTest() {
        // TODO: test tomesd
    }

    /**
     * Test the property 'trackId'
     */
    @Test
    public void trackIdTest() {
        // TODO: test trackId
    }

    /**
     * Test the property 'upscale'
     */
    @Test
    public void upscaleTest() {
        // TODO: test upscale
    }

    /**
     * Test the property 'useKarrasSigmas'
     */
    @Test
    public void useKarrasSigmasTest() {
        // TODO: test useKarrasSigmas
    }

    /**
     * Test the property 'vae'
     */
    @Test
    public void vaeTest() {
        // TODO: test vae
    }

    /**
     * Test the property 'webhook'
     */
    @Test
    public void webhookTest() {
        // TODO: test webhook
    }

    /**
     * Test the property 'width'
     */
    @Test
    public void widthTest() {
        // TODO: test width
    }

}
