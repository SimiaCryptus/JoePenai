/*
 * ModelsLab AI API's
 * This is ModelsLab Stable Diffusion and Multiple AI APIs, here you can pass details to generate images using API, without needs of GPU locally.  You will need to have _**api key**_ to generate images, if you don't have it, get it from [https://modelslab.com](https://modelslab.com/)  Send Json post request with data and links, don't send files as raw format, send accessible links instead
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.simiacryptus.api.java.modelslab.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for DreamboothImg2imgRequest
 */
public class DreamboothImg2imgRequestTest {
    private final DreamboothImg2imgRequest model = new DreamboothImg2imgRequest();

    /**
     * Model tests for DreamboothImg2imgRequest
     */
    @Test
    public void testDreamboothImg2imgRequest() {
        // TODO: test DreamboothImg2imgRequest
    }

    /**
     * Test the property 'embeddingsModel'
     */
    @Test
    public void embeddingsModelTest() {
        // TODO: test embeddingsModel
    }

    /**
     * Test the property 'enhancePrompt'
     */
    @Test
    public void enhancePromptTest() {
        // TODO: test enhancePrompt
    }

    /**
     * Test the property 'guidanceScale'
     */
    @Test
    public void guidanceScaleTest() {
        // TODO: test guidanceScale
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'initImage'
     */
    @Test
    public void initImageTest() {
        // TODO: test initImage
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'loraModel'
     */
    @Test
    public void loraModelTest() {
        // TODO: test loraModel
    }

    /**
     * Test the property 'loraStrength'
     */
    @Test
    public void loraStrengthTest() {
        // TODO: test loraStrength
    }

    /**
     * Test the property 'modelId'
     */
    @Test
    public void modelIdTest() {
        // TODO: test modelId
    }

    /**
     * Test the property 'negativePrompt'
     */
    @Test
    public void negativePromptTest() {
        // TODO: test negativePrompt
    }

    /**
     * Test the property 'numInferenceSteps'
     */
    @Test
    public void numInferenceStepsTest() {
        // TODO: test numInferenceSteps
    }

    /**
     * Test the property 'prompt'
     */
    @Test
    public void promptTest() {
        // TODO: test prompt
    }

    /**
     * Test the property 'safetyChecker'
     */
    @Test
    public void safetyCheckerTest() {
        // TODO: test safetyChecker
    }

    /**
     * Test the property 'samples'
     */
    @Test
    public void samplesTest() {
        // TODO: test samples
    }

    /**
     * Test the property 'scheduler'
     */
    @Test
    public void schedulerTest() {
        // TODO: test scheduler
    }

    /**
     * Test the property 'seed'
     */
    @Test
    public void seedTest() {
        // TODO: test seed
    }

    /**
     * Test the property 'strength'
     */
    @Test
    public void strengthTest() {
        // TODO: test strength
    }

    /**
     * Test the property 'tomesd'
     */
    @Test
    public void tomesdTest() {
        // TODO: test tomesd
    }

    /**
     * Test the property 'trackId'
     */
    @Test
    public void trackIdTest() {
        // TODO: test trackId
    }

    /**
     * Test the property 'useKarrasSigmas'
     */
    @Test
    public void useKarrasSigmasTest() {
        // TODO: test useKarrasSigmas
    }

    /**
     * Test the property 'vae'
     */
    @Test
    public void vaeTest() {
        // TODO: test vae
    }

    /**
     * Test the property 'webhook'
     */
    @Test
    public void webhookTest() {
        // TODO: test webhook
    }

    /**
     * Test the property 'width'
     */
    @Test
    public void widthTest() {
        // TODO: test width
    }

}
