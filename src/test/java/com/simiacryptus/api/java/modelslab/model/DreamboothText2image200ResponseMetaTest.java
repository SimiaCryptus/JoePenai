/*
 * ModelsLab AI API's
 * This is ModelsLab Stable Diffusion and Multiple AI APIs, here you can pass details to generate images using API, without needs of GPU locally.  You will need to have _**api key**_ to generate images, if you don't have it, get it from [https://modelslab.com](https://modelslab.com/)  Send Json post request with data and links, don't send files as raw format, send accessible links instead
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.simiacryptus.api.java.modelslab.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for DreamboothText2image200ResponseMeta
 */
public class DreamboothText2image200ResponseMetaTest {
    private final DreamboothText2image200ResponseMeta model = new DreamboothText2image200ResponseMeta();

    /**
     * Model tests for DreamboothText2image200ResponseMeta
     */
    @Test
    public void testDreamboothText2image200ResponseMeta() {
        // TODO: test DreamboothText2image200ResponseMeta
    }

    /**
     * Test the property 'H'
     */
    @Test
    public void HTest() {
        // TODO: test H
    }

    /**
     * Test the property 'W'
     */
    @Test
    public void WTest() {
        // TODO: test W
    }

    /**
     * Test the property 'embeddings'
     */
    @Test
    public void embeddingsTest() {
        // TODO: test embeddings
    }

    /**
     * Test the property 'filePrefix'
     */
    @Test
    public void filePrefixTest() {
        // TODO: test filePrefix
    }

    /**
     * Test the property 'fullUrl'
     */
    @Test
    public void fullUrlTest() {
        // TODO: test fullUrl
    }

    /**
     * Test the property 'guidanceScale'
     */
    @Test
    public void guidanceScaleTest() {
        // TODO: test guidanceScale
    }

    /**
     * Test the property 'lora'
     */
    @Test
    public void loraTest() {
        // TODO: test lora
    }

    /**
     * Test the property 'loraStrength'
     */
    @Test
    public void loraStrengthTest() {
        // TODO: test loraStrength
    }

    /**
     * Test the property 'modelId'
     */
    @Test
    public void modelIdTest() {
        // TODO: test modelId
    }

    /**
     * Test the property 'multiLingual'
     */
    @Test
    public void multiLingualTest() {
        // TODO: test multiLingual
    }

    /**
     * Test the property 'nSamples'
     */
    @Test
    public void nSamplesTest() {
        // TODO: test nSamples
    }

    /**
     * Test the property 'negativePrompt'
     */
    @Test
    public void negativePromptTest() {
        // TODO: test negativePrompt
    }

    /**
     * Test the property 'panorama'
     */
    @Test
    public void panoramaTest() {
        // TODO: test panorama
    }

    /**
     * Test the property 'prompt'
     */
    @Test
    public void promptTest() {
        // TODO: test prompt
    }

    /**
     * Test the property 'safetyChecker'
     */
    @Test
    public void safetyCheckerTest() {
        // TODO: test safetyChecker
    }

    /**
     * Test the property 'scheduler'
     */
    @Test
    public void schedulerTest() {
        // TODO: test scheduler
    }

    /**
     * Test the property 'seed'
     */
    @Test
    public void seedTest() {
        // TODO: test seed
    }

    /**
     * Test the property 'selfAttention'
     */
    @Test
    public void selfAttentionTest() {
        // TODO: test selfAttention
    }

    /**
     * Test the property 'steps'
     */
    @Test
    public void stepsTest() {
        // TODO: test steps
    }

    /**
     * Test the property 'tomesd'
     */
    @Test
    public void tomesdTest() {
        // TODO: test tomesd
    }

    /**
     * Test the property 'upscale'
     */
    @Test
    public void upscaleTest() {
        // TODO: test upscale
    }

    /**
     * Test the property 'useKarrasSigmas'
     */
    @Test
    public void useKarrasSigmasTest() {
        // TODO: test useKarrasSigmas
    }

    /**
     * Test the property 'vae'
     */
    @Test
    public void vaeTest() {
        // TODO: test vae
    }

}
