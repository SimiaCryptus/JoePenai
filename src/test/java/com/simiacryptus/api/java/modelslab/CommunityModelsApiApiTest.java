/*
 * ModelsLab AI API's
 * This is ModelsLab Stable Diffusion and Multiple AI APIs, here you can pass details to generate images using API, without needs of GPU locally.  You will need to have _**api key**_ to generate images, if you don't have it, get it from [https://modelslab.com](https://modelslab.com/)  Send Json post request with data and links, don't send files as raw format, send accessible links instead
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.simiacryptus.api.java.modelslab;

import com.simiacryptus.api.java.ApiException;
import com.simiacryptus.api.java.modelslab.model.DreamboothFetchQueuedImagesRequest;
import com.simiacryptus.api.java.modelslab.model.DreamboothImg2imgRequest;
import com.simiacryptus.api.java.modelslab.model.DreamboothInpaintingRequest;
import com.simiacryptus.api.java.modelslab.model.DreamboothReloadModelRequest;
import com.simiacryptus.api.java.modelslab.model.DreamboothText2VideoRequest;
import com.simiacryptus.api.java.modelslab.model.DreamboothText2image200Response;
import com.simiacryptus.api.java.modelslab.model.DreamboothText2imageRequest;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommunityModelsApiApi
 */
@Ignore
public class CommunityModelsApiApiTest {

    private final CommunityModelsApiApi api = new CommunityModelsApiApi();

    /**
     * DreamBooth Fetch Queued Images
     *
     * DreamBooth Fetch Queued Images
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dreamboothFetchQueuedImagesTest() throws ApiException {
        DreamboothFetchQueuedImagesRequest dreamboothFetchQueuedImagesRequest = null;
        api.dreamboothFetchQueuedImages(dreamboothFetchQueuedImagesRequest);

        // TODO: test validations
    }
    /**
     * Dreambooth Img2Img
     *
     * Dreambooth Img2Img
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dreamboothImg2imgTest() throws ApiException {
        DreamboothImg2imgRequest dreamboothImg2imgRequest = null;
        api.dreamboothImg2img(dreamboothImg2imgRequest);

        // TODO: test validations
    }
    /**
     * Dreambooth Inpainting
     *
     * Dreambooth Inpainting
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dreamboothInpaintingTest() throws ApiException {
        DreamboothInpaintingRequest dreamboothInpaintingRequest = null;
        api.dreamboothInpainting(dreamboothInpaintingRequest);

        // TODO: test validations
    }
    /**
     * DreamBooth Reload Model
     *
     * After 7 days of inactivity, model will be deleted from inference server.  To reload a model and using it again, you can make api call. it will take 2 minutes to reload a model.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dreamboothReloadModelTest() throws ApiException {
        DreamboothReloadModelRequest dreamboothReloadModelRequest = null;
        api.dreamboothReloadModel(dreamboothReloadModelRequest);

        // TODO: test validations
    }
    /**
     * Dreambooth Text 2 Video
     *
     * Create video from a trained model or publicly available community models.  Pass prompt and it will generate video with model_id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dreamboothText2VideoTest() throws ApiException {
        DreamboothText2VideoRequest dreamboothText2VideoRequest = null;
        api.dreamboothText2Video(dreamboothText2VideoRequest);

        // TODO: test validations
    }
    /**
     * Dreambooth Text2Image
     *
     * Use dreambooth text2img API to generate images from any custom trained model or from any publicly available model.  You can also pass scheduler in API  possible values for scheduler are  - DDPMScheduler - PNDMScheduler - EulerAncestralDiscreteScheduler - DDIMScheduler - LMSDiscreteScheduler - EulerDiscreteScheduler - DPMSolverMultistepScheduler
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dreamboothText2imageTest() throws ApiException {
        DreamboothText2imageRequest dreamboothText2imageRequest = null;
        DreamboothText2image200Response response = api.dreamboothText2image(dreamboothText2imageRequest);

        // TODO: test validations
    }
}
