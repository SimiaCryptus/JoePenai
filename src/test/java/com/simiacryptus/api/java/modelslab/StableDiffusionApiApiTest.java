/*
 * ModelsLab AI API's
 * This is ModelsLab Stable Diffusion and Multiple AI APIs, here you can pass details to generate images using API, without needs of GPU locally.  You will need to have _**api key**_ to generate images, if you don't have it, get it from [https://modelslab.com](https://modelslab.com/)  Send Json post request with data and links, don't send files as raw format, send accessible links instead
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.simiacryptus.api.java.modelslab;

import com.simiacryptus.api.java.ApiException;
import com.simiacryptus.api.java.modelslab.model.FetchQueuedImagesRequest;
import com.simiacryptus.api.java.modelslab.model.Image2ImageRequest;
import com.simiacryptus.api.java.modelslab.model.InpaintingRequest;
import com.simiacryptus.api.java.modelslab.model.Text2Image200Response;
import com.simiacryptus.api.java.modelslab.model.Text2ImageRequest;
import com.simiacryptus.api.java.modelslab.model.TextTo3dRequest;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StableDiffusionApiApi
 */
@Ignore
public class StableDiffusionApiApiTest {

    private final StableDiffusionApiApi api = new StableDiffusionApiApi();

    /**
     * Fetch Queued Images
     *
     * Generate images using Stable diffusion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchQueuedImagesTest() throws ApiException {
        FetchQueuedImagesRequest fetchQueuedImagesRequest = null;
        api.fetchQueuedImages(fetchQueuedImagesRequest);

        // TODO: test validations
    }
    /**
     * Image 2 Image
     *
     * Generate images using Stable diffusion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void image2ImageTest() throws ApiException {
        Image2ImageRequest image2ImageRequest = null;
        api.image2Image(image2ImageRequest);

        // TODO: test validations
    }
    /**
     * Inpainting
     *
     * Generate images using Stable diffusion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void inpaintingTest() throws ApiException {
        InpaintingRequest inpaintingRequest = null;
        api.inpainting(inpaintingRequest);

        // TODO: test validations
    }
    /**
     * Stable Diffusion API System Load
     *
     * Stable Diffusion API System Load
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stableDiffusionApiSystemLoadTest() throws ApiException {
        FetchQueuedImagesRequest fetchQueuedImagesRequest = null;
        api.stableDiffusionApiSystemLoad(fetchQueuedImagesRequest);

        // TODO: test validations
    }
    /**
     * Text 2 Image
     *
     * Text2Image API to generate image from prompt
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void text2ImageTest() throws ApiException {
        Text2ImageRequest text2ImageRequest = null;
        Text2Image200Response response = api.text2Image(text2ImageRequest);

        // TODO: test validations
    }
    /**
     * Text to 3D
     *
     * Text to 3D
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void textTo3dTest() throws ApiException {
        TextTo3dRequest textTo3dRequest = null;
        api.textTo3d(textTo3dRequest);

        // TODO: test validations
    }
}
